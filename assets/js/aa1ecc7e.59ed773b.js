"use strict";(self.webpackChunkambirdsall_com=self.webpackChunkambirdsall_com||[]).push([[5873],{2573:e=>{e.exports=JSON.parse('{"permalink":"/blog/vanilla-js-date-formatting","source":"@site/blog/why-is-date-formatting-so-hard-in-vanilla-js.mdx","title":"Why is date formatting so hard in vanilla JS?","description":"Editor\'s note: this was written before the new, long-overdue [Temporal","date":"2024-08-05T00:00:00.000Z","tags":[],"readingTime":1.69,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"vanilla-js-date-formatting","title":"Why is date formatting so hard in vanilla JS?","topic":"javascript","date":"2024-08-05T00:00:00.000Z"},"unlisted":false,"lastUpdatedAt":1745535817000,"nextItem":{"title":"On that fractal triforce thing there","permalink":"/blog/on-the-sierpinski-triangle-thing"}}')},4419:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var a=n(2573),o=n(4848),r=n(8453);const s={slug:"vanilla-js-date-formatting",title:"Why is date formatting so hard in vanilla JS?",topic:"javascript",date:new Date("2024-08-05T00:00:00.000Z")},i=void 0,l={authorsImageUrls:[]},d=[{value:"wrong",id:"wrong",level:2},{value:"you&#39;re seriously going to make every user download a whole library just to create one(1) common date format with no time zone logic.",id:"youre-seriously-going-to-make-every-user-download-a-whole-library-just-to-create-one1-common-date-format-with-no-time-zone-logic",level:2}];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",del:"del",em:"em",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",sup:"sup",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["Editor's note: this was written before the new, long-overdue ",(0,o.jsxs)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Temporal",children:[(0,o.jsx)(t.code,{children:"Temporal"}),"\nAPI"]}),"\nwas announced. Better days are almost here!"]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Suppose you want to deal with some dates while building a website. You don't want to roll\nyour own input parsing, so you use ",(0,o.jsx)(t.code,{children:"new Date(inputDateString)"}),"; and you want to output\ndatestrings in a format that's clear, readable",(0,o.jsx)(t.sup,{children:(0,o.jsx)(t.a,{href:"#user-content-fn-1-f062af",id:"user-content-fnref-1-f062af","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})}),", and (while we're making a wish list)\nsorts the same both lexically and chronologically. That is: you want ",(0,o.jsx)(t.code,{children:"YYYY-MM-DD"}),". Surely\n",(0,o.jsx)(t.em,{children:"that"})," is built in, right?"]}),"\n",(0,o.jsx)(t.h2,{id:"wrong",children:"wrong"}),"\n",(0,o.jsxs)(t.p,{children:["Oh. Wait, really? Ugh, fine."," Just ",(0,o.jsx)(t.code,{children:"npm install date-fns"})," or ",(0,o.jsx)(t.code,{children:"dayjs"})," or ",(0,o.jsx)(t.code,{children:"moment"})," or"]}),"\n",(0,o.jsx)(t.h2,{id:"youre-seriously-going-to-make-every-user-download-a-whole-library-just-to-create-one1-common-date-format-with-no-time-zone-logic",children:"you're seriously going to make every user download a whole library just to create one(1) common date format with no time zone logic."}),"\n",(0,o.jsx)(t.p,{children:"FINE. Fine. No."}),"\n",(0,o.jsxs)(t.p,{children:["At first, I was tempted to cast the date to a predictable, standardized format and then reach for ",(0,o.jsx)(t.del,{children:"good"})," old-fashioned string manipulation:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"const datestamp = date => new Date(date).toISOString().slice(0, 10)\n"})}),"\n",(0,o.jsx)(t.p,{children:"But verifying the correctness of that function entails"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["remembering/inferring/guessing that ",(0,o.jsx)(t.code,{children:"Date.prototype.toISOString"})," returns an ISO-8601-formatted date;"]}),"\n",(0,o.jsxs)(t.li,{children:["remembering that ISO 8601 dates start ",(0,o.jsx)(t.code,{children:"YYYY-MM-DD"}),";"]}),"\n",(0,o.jsx)(t.li,{children:"remembering that the ISO 8601 format zero-pads single-digit month and day fields; and"}),"\n",(0,o.jsx)(t.li,{children:"walking through a date string counting characters on your fingers like a neanderthal."}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Dear reader, you deserve better than that. You deserve a built-in ",(0,o.jsx)(t.code,{children:"strftime"}),"-style formatting utility! But since you can't have that, here's a reasonably robust, flexible pattern you can use to extract named, semantically-meaningful parts of the date you can slep into whatever template string you want:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:'const datestamp = date => {\n  const { year, month, day } = new Intl.DateTimeFormat(undefined, {\n    year: "numeric",\n    month: "2-digit",\n    day: "2-digit",\n  })\n    .formatToParts(new Date(date))\n    .filter(part => part.type !== "literal")\n    .reduce((acc, part) => {\n      acc[part.type] = part.value\n      return acc\n    }, {})\n\n  return `${year}-${month}-${day}`\n}\n'})}),"\n","\n",(0,o.jsxs)(t.section,{"data-footnotes":!0,className:"footnotes",children:[(0,o.jsx)(t.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{id:"user-content-fn-1-f062af",children:["\n",(0,o.jsxs)(t.p,{children:["What's more, you want people the world over to be able to unambiguously parse your output as ",(0,o.jsx)(t.em,{children:"the same"})," date, even if happens to be before the 13th day of its month. ",(0,o.jsx)(t.a,{href:"#user-content-fnref-1-f062af","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>i});var a=n(6540);const o={},r=a.createContext(o);function s(e){const t=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);