"use strict";(self.webpackChunkambirdsall_com=self.webpackChunkambirdsall_com||[]).push([[5580],{4900:e=>{e.exports=JSON.parse('{"permalink":"/blog/building-an-adequate-wedding-gallery","source":"@site/blog/building-an-adequate-wedding-gallery/index.mdx","title":"Building An Adequate Wedding Gallery","description":"A Cool-ass photo album","date":"2016-11-29T00:00:00.000Z","tags":[],"readingTime":4.165,"hasTruncateMarker":true,"authors":[],"frontMatter":{"slug":"building-an-adequate-wedding-gallery","title":"Building An Adequate Wedding Gallery","topic":"ruby","date":"2016-11-29T00:00:00.000Z"},"unlisted":false,"lastUpdatedAt":1745535817000,"prevItem":{"title":"Zero-friction testing in rails","permalink":"/blog/zero-friction-testing-in-rails"},"nextItem":{"title":"Cron: Legacy","permalink":"/blog/cron-legacy"}}')},6896:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var o=n(4900),a=n(4848),i=n(8453);const l={slug:"building-an-adequate-wedding-gallery",title:"Building An Adequate Wedding Gallery",topic:"ruby",date:new Date("2016-11-29T00:00:00.000Z")},s=void 0,r={authorsImageUrls:[]},d=[{value:"A Cool-ass photo album",id:"a-cool-ass-photo-album",level:2}];function u(e){const t={h2:"h2",li:"li",ol:"ol",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"a-cool-ass-photo-album",children:"A Cool-ass photo album"}),"\n",(0,a.jsx)(t.p,{children:"Our wedding photographer was a little slow in getting us our images, so I got\nto thinking about what to do. I decided I wanted a static image gallery, and I\nwanted it to be easy for anyone who came to get copies of photos they like,\nwhether for online use or making prints. For prints, people should be able to\ndownload the high-resolution originals, and those are such big files, it makes\nsense to zip the files before downloading. For digital use, there should be\nsmaller image files for download[^1],\nbut that could easily be handled entirely client-side."}),"\n",(0,a.jsx)(t.p,{children:'I decided that, in addition to normal "download this photo" usage, I wanted the\nability to'}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"Select any given subset of the images easily; and"}),"\n",(0,a.jsx)(t.li,{children:"Download that set of images as a zip file"}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"This is a kinda fun UI problem AND has a fun backend problem despite dealing\nwith static data. Which is great: since we're not barring our photos from\nanyone, there's no need to implement any auth, which cuts out a big, common hassle right\nfrom the get-go."})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>s});var o=n(6540);const a={},i=o.createContext(a);function l(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);